version: "3.9"

services:
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      timeout: 30s
      interval: 30s
      retries: 5
      start_period: 30s

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: solara
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      timeout: 10s
      interval: 10s
      retries: 5
      start_period: 10s

  nestjs-service:
    build: ./nestjs-service
    command: npm run start
    volumes:
      - ./nestjs-service:/app
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=solara
      - RABBITMQ_URL=amqp://rabbitmq:rabbitmq@rabbitmq:5672
      - NODE_ENV=development
      - LOG_LEVEL=info
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  python-generator:
    build: ./python-generator
    command: python app.py
    volumes:
      - ./python-generator:/app
      - ./output:/app/output
    ports:
      - "8000:8000"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OUTPUT_DIR=/app/output
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8000
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  python-worker:
    build: ./python-worker
    command: python main.py
    volumes:
      - ./python-worker:/app
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:rabbitmq@rabbitmq:5672
      - GENERATOR_URL=http://python-generator:8000
      - LOG_LEVEL=INFO
      - HEALTH_CHECK_INTERVAL=30
      - RABBITMQ_TIMEOUT=300
    depends_on:
      rabbitmq:
        condition: service_healthy
      python-generator:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres-data:
  rabbitmq-data:
